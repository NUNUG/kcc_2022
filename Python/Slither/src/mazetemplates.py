class MazeTemplates:
	"""This class contains templates which you can edit to create new mazes.  
	Each maze is made of text, but this class knows how to convert it to 
	walls and floors for the game to use."""
	def __init__(self):
		"""Set up the MazeTemplate object."""
		# To create a new map, add a new line inside this array.
		# Then create the new function with the template text inside it.
		# Use * for a wall, . for a space, and x for the starting postition.
		# All maze templates MUST be 50 rows of 80 columns.
		# All maze templates should have an outer wall.  Don't let your snake escape!
		# You can just copy the "def template_emtymaze()" function to get started!
		self.templates = [
			self.template_emptymaze(),
			self.template_twobarsmaze(),
			self.template_innerwallmaze(),
			self.template_checkersmaze(),
			self.template_zigzagmaze()
		]

	def template_emptymaze(self):
		return [
			"****************************************",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*..................x...................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"****************************************",
		]

	def template_twobarsmaze(self):
		return [
			"****************************************",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*......................................*",
			"*......................................*",
			"*....*.............x.............*.....*",
			"*....*...........................*.....*",
			"*......................................*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*....*...........................*.....*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"****************************************",
		]


	def template_innerwallmaze(self):
		return [
			"****************************************",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*.........********************.........*",
			"*......................................*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*.........*..................*.........*",
			"*......................................*",
			"*.........********************.........*",
			"*......................................*",
			"*....x.................................*",
			"*......................................*",
			"*......................................*",
			"****************************************",
		]

	def template_checkersmaze(self):
		return [
			"****************************************",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*......................................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*......................................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*..................x...................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*......................................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*......................................*",
			"*......................................*",
			"*....*..*..*..*..*..*..*..*..*..*..*...*",
			"*......................................*",
			"*......................................*",
			"*......................................*",
			"****************************************",
		]

	def template_zigzagmaze(self):
		return [
			"****************************************",
			"*......................................*",
			"*......x...............................*",
			"*.............*...................*....*",
			"*......................................*",
			"*...........*...................*......*",
			"*......................................*",
			"*.........*...................*........*",
			"*......................................*",
			"*.......*...................*..........*",
			"*......................................*",
			"*.....*.......*...........*............*",
			"*......................................*",
			"*...*.......*...........*..........*...*",
			"*......................................*",
			"*.........*......................*.....*",
			"*......................................*",
			"*.......*......................*.......*",
			"*......................................*",
			"*.....*......................*.........*",
			"*......................................*",
			"*...*......................*...........*",
			"*......................................*",
			"*......................................*",
			"****************************************",
		]
	def maze_count(self):
		"""This tells us how many maze templates we have available."""
		return len(self.templates)
